
Usage
=====

.. note::

    You don't need the repository content to use the `Docker Hub <https://hub.docker.com/r/rxastro/casa6/tags>`_ images. 

Use with Docker
^^^^^^^^^^^^^^^

To run ``rxastro:casa6`` on a host with `Docker Desktop <https://docs.docker.com/docker-for-mac/install/>`_, just type,

.. code-block:: console

    $ docker run -it -v ~/Workspace:/root/WorkDir rxastro/casa6:latest bash

In case you would like to manually update local-cached images after any repository update, you probably want to add this first:

.. code-block:: console

    $ docker pull rxastro/casa6:latest

This will download and start a container on-the-fly and login as ``root`` (bravely...), while mounting your host directory ``~/Workspace`` (assuming it exists) to ``/root/WorkDir`` of your container.
After this, you can perform code development and data analysis in ``/root/WorkDir`` on your container (actually pointing to ``~/Workspace`` in your host now), with the access of tools/environment (e.g. **casa6**, **astropy**, etc.) residing in the container.

Use with Jupyter
^^^^^^^^^^^^^^^^

A Jupyter server has been built in the Docker image ``rxastro/casa6:latest`` (see the `Dockerfile <https://github.com/r-xue/casa6-docker/blob/master/Dockerfile>`_ content for its customization).
This creates a useful feature of ``rx.astro/casa6:latest``: you can connect your host web browser to the Jupyter server running its container instance.
Then you have a portable development environment independent from your host OS, which offers all Jupyter-based features (e.g. `Widgets <https://ipywidgets.readthedocs.io>`_) along with many Python packages: **casatools**, **casatasks**, **astropy**, **numpy**, **matplotlib**, and more.

To log in a ``rxastro/casa6:latest`` container and start the Jupyter session,

.. code-block:: console

    user@host      $ docker run -v ~/Workspace:/root/WorkDir --env PORT=8890 -it -p 8890:8890 rxastro/casa6:latest bash
    root@container $ jupyter-lab # start a Jupyter session

Then you can move back to the host, open a web browser, and connect it to the Jupyter server running on the guest OS:

.. code-block:: console

    user@host      $ firefox --new-window ${address:8890-with-token}

*work-in-progress*: If you download the `example data and notebooks <https://github.com/r-xue/casa6-docker/blob/master/notebooks/>`_ and put them in ``~/Workspace`` on the host, you should be able to re-run them in your firefox window as shown in the example pages: `ism3d.uvhelper <https://r-xue.github.io/casa6-docker/html/notebooks/demo_api_uvhelper.html>`_, `ism3d.arts <https://r-xue.github.io/casa6-docker/html/notebooks/demo_api_arts.html>`_, and `ism3d.arts.lens <https://r-xue.github.io/casa6-docker/html/notebooks/demo_api_lens.html>`_

Use with Singularity
^^^^^^^^^^^^^^^^^^^^

One use case of the Docker images is that these portable containers can be imported to `Singularity <https://singularity.lbl.gov/docs-hpc>`_ for HPC-based deployment.

try:

.. code-block:: console

    $ singularity pull docker://rxastro/casa6:latest
    $ file casa6_latest.sif
    $ singularity inspect casa6_latest.sif
    $ singularity exec -H $HOME/vh:/Users/Rui casa6_latest.sif /bin/bash

.. note::
    
    There are significant design `differences <https://sylabs.io/guides/3.6/user-guide/singularity_and_docker.html>`_ between Docker and Singularity, and a detailed demonstration is beyond the scope of this documentation.

Use as a Docker base image
^^^^^^^^^^^^^^^^^^^^^^^^^^

You can start from ``rxastro/casa6:latest`` `Dockerfile <https://github.com/r-xue/casa6-docker/blob/master/Dockerfile>`_, customize it (e.g., add more packages or your pipeline/workflow, optimize container size), and build a local image for your purpose using the local `building instruction <http://r-xue.github.io/casa6-docker/html/docker/build.html>`_.

You can also use the Docker hub image a base image for your custom build, which may save some time. 
Just put ``FROM: rxastro/casa6:latest`` in your Dockerfile.